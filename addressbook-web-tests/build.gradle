apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    testImplementation group: 'org.testng', name: 'testng', version: '7.5'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.1.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    implementation group: 'com.beust', name: 'jcommander', version: '1.81'
    implementation group: 'xstream', name: 'xstream', version: '1.2.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.27'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.3.Final'
    agent "org.aspectj:aspectjweaver:1.8.0"
    compile "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
    implementation group: 'org.robotframework', name: 'robotframework', version: '4.1.2'


    task testGroups (type: Test) {
        useTestNG {
            suites 'src/test/resources/testng-groups.xml'
        }
        if (project.hasProperty('browser')) {
            systemProperty 'browser', "${browser}"
        }
       if (project.hasProperty('platform')) {
           systemProperty 'platform', "${platform}"
       }
        if (project.hasProperty('target')) {
            systemProperty 'target', "${target}"
        }
       if (project.hasProperty('verifyUI')) {
           systemProperty 'verifyUI', "${verifyUI}"
       }
    }

    testGroups.doFirst {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }

    task testContacts (type: Test) {
        useTestNG {
            suites 'src/test/resources/testng-contacts.xml'
        }
        if (project.hasProperty('browser')) {
            systemProperty 'browser', "${browser}"
        }
        if (project.hasProperty('platform')) {
            systemProperty 'platform', "${platform}"
        }
        if (project.hasProperty('target')) {
            systemProperty 'target', "${target}"
        }
        if (project.hasProperty('verifyUI')) {
            systemProperty 'verifyUI', "${verifyUI}"
        }
    }

    task rf (type: JavaExec) {
        main = 'org.robotframework.RobotFramework'
        classpath = sourceSets.test.runtimeClasspath
        args '--outputdir', 'build/rf-report'
        args 'src/test/resources/rf'
    }
}